openapi: 3.0.3
info:
  title: Komercio
  version: 1.0.0
  description: Komercio Ã© um projeto que simula a API para um site de compra e venda.
paths:
  /api/accounts/:
    get:
      operationId: api_accounts_list
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      tags:
        - api
      security:
        - tokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedAccountList"
          description: ""
    post:
      operationId: api_accounts_create
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Account"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Account"
        required: true
      security:
        - tokenAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: ""
  /api/accounts/{id}/:
    put:
      operationId: api_accounts_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this user.
          required: true
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Account"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Account"
        required: true
      security:
        - tokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: ""
    patch:
      operationId: api_accounts_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this user.
          required: true
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedAccount"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedAccount"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedAccount"
      security:
        - tokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: ""
  /api/accounts/{id}/management/:
    put:
      operationId: api_accounts_management_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this user.
          required: true
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IsActive"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/IsActive"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/IsActive"
      security:
        - tokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IsActive"
          description: ""
    patch:
      operationId: api_accounts_management_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this user.
          required: true
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedIsActive"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedIsActive"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedIsActive"
      security:
        - tokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IsActive"
          description: ""
  /api/accounts/newest/{num}/:
    get:
      operationId: api_accounts_newest_list
      parameters:
        - in: path
          name: num
          schema:
            type: integer
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      tags:
        - api
      security:
        - tokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedAccountList"
          description: ""
  /api/login/:
    post:
      operationId: api_login_create
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Login"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Login"
        required: true
      security:
        - tokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login"
          description: ""
  /api/products/:
    get:
      operationId: api_products_list
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      tags:
        - api
      security:
        - tokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedProductList"
          description: ""
    post:
      operationId: api_products_create
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDetail"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ProductDetail"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ProductDetail"
        required: true
      security:
        - tokenAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDetail"
          description: ""
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this product.
          required: true
      tags:
        - api
      security:
        - tokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDetail"
          description: ""
    put:
      operationId: api_products_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this product.
          required: true
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDetail"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ProductDetail"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ProductDetail"
        required: true
      security:
        - tokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDetail"
          description: ""
    patch:
      operationId: api_products_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this product.
          required: true
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedProductDetail"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedProductDetail"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedProductDetail"
      security:
        - tokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDetail"
          description: ""
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - json
              - yaml
        - in: query
          name: lang
          schema:
            type: string
            enum:
              - af
              - ar
              - ar-dz
              - ast
              - az
              - be
              - bg
              - bn
              - br
              - bs
              - ca
              - cs
              - cy
              - da
              - de
              - dsb
              - el
              - en
              - en-au
              - en-gb
              - eo
              - es
              - es-ar
              - es-co
              - es-mx
              - es-ni
              - es-ve
              - et
              - eu
              - fa
              - fi
              - fr
              - fy
              - ga
              - gd
              - gl
              - he
              - hi
              - hr
              - hsb
              - hu
              - hy
              - ia
              - id
              - ig
              - io
              - is
              - it
              - ja
              - ka
              - kab
              - kk
              - km
              - kn
              - ko
              - ky
              - lb
              - lt
              - lv
              - mk
              - ml
              - mn
              - mr
              - ms
              - my
              - nb
              - ne
              - nl
              - nn
              - os
              - pa
              - pl
              - pt
              - pt-br
              - ro
              - ru
              - sk
              - sl
              - sq
              - sr
              - sr-latn
              - sv
              - sw
              - ta
              - te
              - tg
              - th
              - tk
              - tr
              - tt
              - udm
              - uk
              - ur
              - uz
              - vi
              - zh-hans
              - zh-hant
      tags:
        - schema
      security:
        - tokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ""
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        is_seller:
          type: boolean
        date_joined:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description:
            Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description:
            Designates that this user has all permissions without explicitly
            assigning them.
      required:
        - date_joined
        - first_name
        - id
        - is_active
        - is_superuser
        - last_name
        - password
        - username
    IsActive:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description:
            Designates that this user has all permissions without explicitly
            assigning them.
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description:
            Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
          readOnly: true
        username:
          type: string
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        is_seller:
          type: boolean
          readOnly: true
        groups:
          type: array
          items:
            type: integer
          description:
            The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
        - date_joined
        - first_name
        - id
        - is_seller
        - is_superuser
        - last_name
        - username
    Login:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
        - password
        - username
    PaginatedAccountList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Account"
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    PatchedAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        is_seller:
          type: boolean
        date_joined:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description:
            Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description:
            Designates that this user has all permissions without explicitly
            assigning them.
    PatchedIsActive:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description:
            Designates that this user has all permissions without explicitly
            assigning them.
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description:
            Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
          readOnly: true
        username:
          type: string
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        is_seller:
          type: boolean
          readOnly: true
        groups:
          type: array
          items:
            type: integer
          description:
            The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
    PatchedProductDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        seller:
          allOf:
            - $ref: "#/components/schemas/Account"
          readOnly: true
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
        seller:
          type: string
          format: uuid
      required:
        - description
        - id
        - price
        - quantity
        - seller
    ProductDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        seller:
          allOf:
            - $ref: "#/components/schemas/Account"
          readOnly: true
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
      required:
        - description
        - id
        - price
        - quantity
        - seller
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
